server {
	listen %INTERFACE%:%PORT% default_server;

	# Allow connections only from 172.30.32.2 (HA Ingress)
	allow 172.30.32.2;
	deny all;

	# Redirect / requests to Pi-hole's dashboard --> /admin/
	# location = / {
	# 	# Does not work in network bridge mode; Nginx prepends its own local hostname and port to the redirect path when using
	# 	# return 302 admin/;

	# 	# Lua is used to perform an HTTP redirect to ensure that no hostname or port is prepended
	# 	content_by_lua_block {
	# 		local ingress_path = ngx.var.http_x_ingress_path or ""

	# 		-- Disabled; This prevents direct access to Pi-hole without HA Ingress
	# 		-- if ingress_path == "" then
	# 		-- 	ngx.status = 400 -- Bad Request
	# 		-- 	ngx.header["Content-Type"] = "text/plain"
	# 		-- 	ngx.say("Error: HTTP header 'X-Ingress-Path' is missing.")
	# 		-- 	return ngx.exit(400)
    	# 		-- end

	# 		ngx.header["Location"] = ingress_path .. "/admin/"
	# 		ngx.exit(302)
	# 	}
	# }

	# Redirect / requests to Pi-hole's dashboard --> /admin/
	location = / {
		return 302 admin/;
	}

    	location / {
		# Redirects are not used; Keeping for possible future usage
		# absolute_redirect off;
		# proxy_redirect ~^(/admin.*) $http_x_ingress_path$1;

		# proxy_set_header X-Ingress-Path "";

		# Overwrite "X-Frame-Options: DENY"; required for HA Ingress
		proxy_hide_header X-Frame-Options;
		add_header X-Frame-Options "SAMEORIGIN";

		# Enables string replacement in responses with the specified MIME types in addition to "text/html"
		sub_filter_types application/javascript; #text/css

		# Indicates whether to look for each string to replace once or repeatedly
		sub_filter_once off;

		# https://developers.home-assistant.io/docs/add-ons/presentation/#ingress
		# Replace webserver.paths.prefix with HA Ingress token
		sub_filter '/live-long-and-prosper' '$http_x_ingress_path';

		# Pass requests to Pi-hole
		proxy_pass http://127.0.0.1:31415/;
	}
}
